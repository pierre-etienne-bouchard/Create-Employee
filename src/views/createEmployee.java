/*
 * gui
 */
package views;

import entities.Adresse;
import entities.Employee;

import java.text.ParseException;
import java.text.SimpleDateFormat;

import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

import javax.swing.SpinnerNumberModel;
import mesExceptions.ErrorAdresse;
import mesExceptions.ErrorDepartment;
import mesExceptions.ErrorEmployee;
import mesExceptions.ErrorHireType;

/**
 *
 * @author Pierre-Etienne Bouchard (1895248@bdeb.qc.ca)
 */
public class createEmployee extends javax.swing.JFrame {

    // Liste globale de nos employes
    Set<Employee> listeEmployee= new HashSet();
    
    /**
     * Creates new form createEmployee
     */
    public createEmployee() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupHireType = new javax.swing.ButtonGroup();
        jPanelApplication = new javax.swing.JPanel();
        jPanelAdresse = new javax.swing.JPanel();
        jTextFieldStreetNumber = new javax.swing.JTextField();
        jTextFieldStreetName = new javax.swing.JTextField();
        jTextFieldAppartmentNumber = new javax.swing.JTextField();
        jTextFieldPostalCode = new javax.swing.JTextField();
        jLabelAddress = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButtonCreate = new javax.swing.JButton();
        jButtonDisplay = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jPanelDepartment = new javax.swing.JPanel();
        jLabelDepartment = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListDepartment = new javax.swing.JList<>();
        jPanelEmployee = new javax.swing.JPanel();
        jLabelFirstName = new javax.swing.JLabel();
        jTextFieldFistName = new javax.swing.JTextField();
        jLabelLastName = new javax.swing.JLabel();
        jTextFieldLastName = new javax.swing.JTextField();
        jRadioButtonFullTime = new javax.swing.JRadioButton();
        jRadioButtonPartialTime = new javax.swing.JRadioButton();
        jLabelHireDate = new javax.swing.JLabel();
        jComboBoxMonth = new javax.swing.JComboBox<>();
        jTextFieldDefaultSalary = new javax.swing.JTextField();
        jLabelHireType = new javax.swing.JLabel();
        jSpinnerNombreJours = new javax.swing.JSpinner();
        jSliderSalary = new javax.swing.JSlider();
        jLabelSalary = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Create Employee");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTextFieldStreetNumber.setText("Street Number");
        jTextFieldStreetNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldStreetNumberFocusLost(evt);
            }
        });
        jTextFieldStreetNumber.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextFieldStreetNumberMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldStreetNumberMouseClicked(evt);
            }
        });
        jTextFieldStreetNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldStreetNumberActionPerformed(evt);
            }
        });

        jTextFieldStreetName.setText("Street Name");
        jTextFieldStreetName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldStreetNameFocusLost(evt);
            }
        });
        jTextFieldStreetName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextFieldStreetNameMousePressed(evt);
            }
        });
        jTextFieldStreetName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldStreetNameActionPerformed(evt);
            }
        });

        jTextFieldAppartmentNumber.setText("Appartment Number");
        jTextFieldAppartmentNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldAppartmentNumberFocusLost(evt);
            }
        });
        jTextFieldAppartmentNumber.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextFieldAppartmentNumberMousePressed(evt);
            }
        });
        jTextFieldAppartmentNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAppartmentNumberActionPerformed(evt);
            }
        });

        jTextFieldPostalCode.setText("Postal Code");
        jTextFieldPostalCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPostalCodeFocusLost(evt);
            }
        });
        jTextFieldPostalCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextFieldPostalCodeMousePressed(evt);
            }
        });
        jTextFieldPostalCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPostalCodeActionPerformed(evt);
            }
        });

        jLabelAddress.setText("Address");

        javax.swing.GroupLayout jPanelAdresseLayout = new javax.swing.GroupLayout(jPanelAdresse);
        jPanelAdresse.setLayout(jPanelAdresseLayout);
        jPanelAdresseLayout.setHorizontalGroup(
            jPanelAdresseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAdresseLayout.createSequentialGroup()
                .addGroup(jPanelAdresseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelAdresseLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelAdresseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldStreetName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldStreetNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelAdresseLayout.createSequentialGroup()
                        .addComponent(jLabelAddress)
                        .addGap(40, 40, 40)
                        .addGroup(jPanelAdresseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldAppartmentNumber)
                            .addComponent(jTextFieldPostalCode))))
                .addGap(24, 24, 24))
        );
        jPanelAdresseLayout.setVerticalGroup(
            jPanelAdresseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAdresseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldStreetNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldStreetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(jPanelAdresseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAppartmentNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAddress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jButtonCreate.setText("Create");
        jButtonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateActionPerformed(evt);
            }
        });

        jButtonDisplay.setText("Display");
        jButtonDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisplayActionPerformed(evt);
            }
        });

        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonCancel)
                .addGap(18, 18, 18)
                .addComponent(jButtonClear)
                .addGap(49, 49, 49)
                .addComponent(jButtonDisplay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCreate)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCreate)
                    .addComponent(jButtonDisplay)
                    .addComponent(jButtonClear)
                    .addComponent(jButtonCancel))
                .addContainerGap())
        );

        jLabelDepartment.setText("Department");

        jListDepartment.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "IT", "RH", "Marketing", "Finance" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListDepartment.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jListDepartment);

        javax.swing.GroupLayout jPanelDepartmentLayout = new javax.swing.GroupLayout(jPanelDepartment);
        jPanelDepartment.setLayout(jPanelDepartmentLayout);
        jPanelDepartmentLayout.setHorizontalGroup(
            jPanelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDepartmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDepartment)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDepartmentLayout.setVerticalGroup(
            jPanelDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDepartmentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelDepartment)
                .addGap(69, 69, 69))
            .addGroup(jPanelDepartmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabelFirstName.setText("First Name");

        jLabelLastName.setText("Last Name");

        buttonGroupHireType.add(jRadioButtonFullTime);
        jRadioButtonFullTime.setText("Full Time");
        jRadioButtonFullTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFullTimeActionPerformed(evt);
            }
        });

        buttonGroupHireType.add(jRadioButtonPartialTime);
        jRadioButtonPartialTime.setText("Partial Time");

        jLabelHireDate.setText("Hire Date");

        jComboBoxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        jComboBoxMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMonthActionPerformed(evt);
            }
        });

        jTextFieldDefaultSalary.setText("2500");

        jLabelHireType.setText("Hire type");

        jSpinnerNombreJours.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        jSpinnerNombreJours.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSpinnerNombreJoursMouseClicked(evt);
            }
        });

        jSliderSalary.setMaximum(5000);
        jSliderSalary.setToolTipText("");
        jSliderSalary.setValue(2500);
        jSliderSalary.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderSalaryStateChanged(evt);
            }
        });

        jLabelSalary.setText("Salary");

        javax.swing.GroupLayout jPanelEmployeeLayout = new javax.swing.GroupLayout(jPanelEmployee);
        jPanelEmployee.setLayout(jPanelEmployeeLayout);
        jPanelEmployeeLayout.setHorizontalGroup(
            jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEmployeeLayout.createSequentialGroup()
                        .addComponent(jLabelFirstName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jTextFieldFistName, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jLabelLastName)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 29, Short.MAX_VALUE))
                    .addGroup(jPanelEmployeeLayout.createSequentialGroup()
                        .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelEmployeeLayout.createSequentialGroup()
                                .addComponent(jLabelHireDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSpinnerNombreJours, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelEmployeeLayout.createSequentialGroup()
                                .addComponent(jLabelHireType)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButtonFullTime)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButtonPartialTime)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEmployeeLayout.createSequentialGroup()
                        .addComponent(jLabelSalary)
                        .addGap(36, 36, 36)
                        .addComponent(jSliderSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldDefaultSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );
        jPanelEmployeeLayout.setVerticalGroup(
            jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFirstName)
                    .addComponent(jLabelLastName)
                    .addComponent(jTextFieldFistName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonFullTime)
                    .addComponent(jRadioButtonPartialTime)
                    .addComponent(jLabelHireType))
                .addGap(9, 9, 9)
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHireDate)
                    .addComponent(jComboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerNombreJours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSalary)
                    .addComponent(jSliderSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDefaultSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout jPanelApplicationLayout = new javax.swing.GroupLayout(jPanelApplication);
        jPanelApplication.setLayout(jPanelApplicationLayout);
        jPanelApplicationLayout.setHorizontalGroup(
            jPanelApplicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelApplicationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelApplicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelApplicationLayout.createSequentialGroup()
                        .addComponent(jPanelDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelAdresse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelApplicationLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelApplicationLayout.createSequentialGroup()
                        .addComponent(jPanelEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanelApplicationLayout.setVerticalGroup(
            jPanelApplicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelApplicationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanelApplicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelAdresse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelDepartment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelApplication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelApplication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonFullTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFullTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonFullTimeActionPerformed

    private void jTextFieldStreetNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldStreetNumberActionPerformed
        jTextFieldStreetNumber.setText("");
    }//GEN-LAST:event_jTextFieldStreetNumberActionPerformed

    /**
     * Met a jour la liste du nombre de jours selon le mois selectionne.
     * @param evt 
     */
    private void jComboBoxMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMonthActionPerformed

        int todayIsTheDay = getDayOfTheMonth();
       
        //Met a jour le jour le nombre de jours selon le mois actuel
        updateSpinnerDaysOfTheMonth(todayIsTheDay, jComboBoxMonth.getSelectedIndex()+1);
        
    }//GEN-LAST:event_jComboBoxMonthActionPerformed
    private int getDayOfTheMonth(){
        int actualDay = 1;
        
        Date date = new Date();
 
        Calendar cal = Calendar.getInstance();

        int dayOfTheMonth = cal.get(Calendar.DAY_OF_MONTH);

        actualDay = dayOfTheMonth;
        
        return actualDay;
    }
    
    private int getMonthOfTheYear(){
        
        Date date = new Date();
 
        Calendar cal = Calendar.getInstance();

        int monthOfTheYear = cal.get(Calendar.MONTH)+1;

        return monthOfTheYear;
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        int dayOfTheMonth = getDayOfTheMonth();
        
        int monthOfTheYear = getMonthOfTheYear();
        
        //Met a jour le jour du mois et le mois de l'annee
        updateSpinnerDaysOfTheMonth(dayOfTheMonth, monthOfTheYear);
    }//GEN-LAST:event_formWindowOpened

    private void jButtonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateActionPerformed
        
        try{
            
            String nom = "";
            String prenom = "";
            
            // Valider que le nom et le prenom existent
            validateEmployeeInformation();
                   
            nom = jTextFieldFistName.getText();
            prenom = jTextFieldLastName.getText();

            // Valider que le departement est selectionne

            String department = ""; 
            
            validateDepartmentSelection();
            
            if(jListDepartment.getSelectedValue().length() > 0 ){
                department =jListDepartment.getSelectedValue();
            }else{
                // Avertir l'utilisateur qu'il doit remplir ce champ
                JOptionPane.showMessageDialog(null, "Departement obligatoire");

            }

            // Valider le type d'emploie

            boolean fullTime = false; 

            validateHireType();
            
            if(jRadioButtonFullTime.isSelected() || jRadioButtonPartialTime.isSelected()){
                if(jRadioButtonFullTime.isSelected()){
                    fullTime = true;
                }else{
                    fullTime = false;
                }
            }else{
                // Avertir l'utilisateur qu'il doit remplir ce champ
                JOptionPane.showMessageDialog(null, "Type d'emploi obligatoire");
            }

            // Valider que les champs de l'adresse sont remplis

            int numero  = 0; 
            String nomRue = "";
            String codePostal = "";
            int appartment = 0;
            Adresse adresse = null;

            validateAdresse();
            
            numero = Integer.valueOf( jTextFieldStreetNumber.getText());
            nomRue = jTextFieldStreetName.getText();
            appartment = Integer.valueOf(jTextFieldAppartmentNumber.getText());
            codePostal =  jTextFieldPostalCode.getText() ;

            //creation adresse

            adresse = new Adresse(numero, nomRue, codePostal, appartment);

            // Besoin de la date pour la creation de l'employe

            Date date = new Date();
            //System.out.println(date);

            Calendar cal = Calendar.getInstance();

            cal.setTime(date);

            // Choisit un format pour la date
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy 'at' h:m:s");

            // initialise l'heure
            dateFormat.setTimeZone(cal.getTimeZone());

           // dateFormat.format(date);

            //debug
            System.out.println("Date et heure: " + dateFormat.format(date));

            // Extrait l'annee
            int year = cal.get(Calendar.YEAR);
            int heure = cal.get(Calendar.HOUR_OF_DAY);
            int minute = cal.get(Calendar.MINUTE);
            int seconde = cal.get(Calendar.SECOND);

            // concatene les valeurs extraites pour en faire une string
            String hireDate = Integer.valueOf(
                    jSpinnerNombreJours.getModel().getValue().toString()) 
                    + "-" 
                    + jComboBoxMonth.getSelectedIndex()+1
                    + "-"
                    + year
                    + " at "
                    + heure + ":"
                    + minute + ":"
                    + seconde;

            // NOTE *** DOIT CORRESPONDRE AU FORMAT SIMPLEDATEFORMAT ***

            // Instancie la date avec la string
            try {
                date = dateFormat.parse(hireDate);
            } catch (ParseException ex) {
                Logger.getLogger(createEmployee.class.getName()).log(Level.SEVERE, null, ex);
            }

            // Extrait le salaire
            double salary = (double)jSliderSalary.getValue();

            //creation employee

            Employee employee = new Employee(nom, prenom, fullTime, date, salary,
                department, adresse);

            listeEmployee.add(employee);

        }catch(Error e){
            //System.err.println("Error: " + e);
            
        }catch(ErrorEmployee emp){
            //System.err.println("Can not continue: "+emp);
            
        }catch(ErrorDepartment dep){
            //System.err.println("Can not continue: "+dep);
            
        }catch(ErrorAdresse adr){
            //System.err.println("Can not continue: "+adr);
            
        }catch(ErrorHireType hir){
            //System.err.println("Can not continue: "+hir);
        }catch(NumberFormatException nbr){
            System.err.println("Can not continue: "+nbr);
        }
        
        
        //debug
        //employee.afficher();
        
    }//GEN-LAST:event_jButtonCreateActionPerformed

    private void jSpinnerNombreJoursMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSpinnerNombreJoursMouseClicked
        //
        int todayIsTheDay = 
                Integer.valueOf(
                        jSpinnerNombreJours.getModel().getValue().toString());
        //debug
            //System.out.println("User selected day : "+todayIsTheDay);
        
    }//GEN-LAST:event_jSpinnerNombreJoursMouseClicked

    private void jTextFieldStreetNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldStreetNameActionPerformed
        
    }//GEN-LAST:event_jTextFieldStreetNameActionPerformed

    private void jTextFieldAppartmentNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAppartmentNumberActionPerformed
        jTextFieldAppartmentNumber.setText("");
    }//GEN-LAST:event_jTextFieldAppartmentNumberActionPerformed

    private void jTextFieldPostalCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPostalCodeActionPerformed
        jTextFieldPostalCode.setText("");
    }//GEN-LAST:event_jTextFieldPostalCodeActionPerformed

    /**
     * Close the program
     * @param evt 
     */
    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
     * Reset all the fields with a reusable function
     * @param evt 
     */
    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        clear();
    }//GEN-LAST:event_jButtonClearActionPerformed

    /**
     * Update the salary text field with the value of the slider
     * @param evt 
     */
    private void jSliderSalaryStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderSalaryStateChanged
        String t = String.valueOf(jSliderSalary.getValue());
        jTextFieldDefaultSalary.setText(t);
    }//GEN-LAST:event_jSliderSalaryStateChanged

    private void jTextFieldStreetNumberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldStreetNumberMouseClicked
        
    }//GEN-LAST:event_jTextFieldStreetNumberMouseClicked

    private void jTextFieldStreetNumberMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldStreetNumberMousePressed
        jTextFieldStreetNumber.setText("");
    }//GEN-LAST:event_jTextFieldStreetNumberMousePressed

    private void jTextFieldStreetNameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldStreetNameMousePressed
        jTextFieldStreetName.setText("");
    }//GEN-LAST:event_jTextFieldStreetNameMousePressed

    private void jTextFieldAppartmentNumberMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldAppartmentNumberMousePressed
        jTextFieldAppartmentNumber.setText("");
    }//GEN-LAST:event_jTextFieldAppartmentNumberMousePressed

    private void jTextFieldPostalCodeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPostalCodeMousePressed
        jTextFieldPostalCode.setText("");
    }//GEN-LAST:event_jTextFieldPostalCodeMousePressed

    private void jTextFieldStreetNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldStreetNumberFocusLost
        if(jTextFieldStreetNumber.getText().length()==0)
            jTextFieldStreetNumber.setText("Street Number");
    }//GEN-LAST:event_jTextFieldStreetNumberFocusLost

    private void jTextFieldStreetNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldStreetNameFocusLost
        if(jTextFieldStreetName.getText().length()==0)
            jTextFieldStreetName.setText("Street Name");
    }//GEN-LAST:event_jTextFieldStreetNameFocusLost

    private void jTextFieldAppartmentNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAppartmentNumberFocusLost
        if(jTextFieldAppartmentNumber.getText().length()==0)
            jTextFieldAppartmentNumber.setText("Appartment Number");
    }//GEN-LAST:event_jTextFieldAppartmentNumberFocusLost

    private void jTextFieldPostalCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPostalCodeFocusLost
        if(jTextFieldPostalCode.getText().length()==0)
            jTextFieldPostalCode.setText("Postal Code");
    }//GEN-LAST:event_jTextFieldPostalCodeFocusLost

    private void jButtonDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisplayActionPerformed
        listeEmployee.forEach((employee) -> {
            employee.afficher();
        });
    }//GEN-LAST:event_jButtonDisplayActionPerformed

    private void updateSpinnerDaysOfTheMonth(int dayOfTheMonth, int monthOfTheYear){
        
 
        SpinnerNumberModel monthModel;
        switch(monthOfTheYear){
            case 1:case 3:case 5:case 7:case 8:case 10:case 12:
                monthModel = new SpinnerNumberModel(dayOfTheMonth,1,31,1);
                jSpinnerNombreJours.setModel(monthModel);
                //debug
                    //System.out.println("Nombre de jour: 31");
                break;

            case 4:case 6:case 9:case 11:
                monthModel = new SpinnerNumberModel(dayOfTheMonth,1,30,1);
                jSpinnerNombreJours.setModel(monthModel);
                //debug
                    //System.out.println("Nombre de jour: 30");
                break;

            case 2:
                monthModel = new SpinnerNumberModel(dayOfTheMonth,1,28,1);
                jSpinnerNombreJours.setModel(monthModel);
                //debug
                    //System.out.println("Nombre de jour: 28 ");
                break;
                
            default:
                
        }
        //Update le jour du mois
        jSpinnerNombreJours.setValue(dayOfTheMonth);
                
        //update le mois
        jComboBoxMonth.setSelectedIndex(monthOfTheYear-1);
        System.out.println("Le mois est-il le bon maintenant ?");
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(createEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(createEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(createEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(createEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new createEmployee().setVisible(true);
            }
        });
        
        
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupHireType;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JButton jButtonDisplay;
    private javax.swing.JComboBox<String> jComboBoxMonth;
    private javax.swing.JLabel jLabelAddress;
    private javax.swing.JLabel jLabelDepartment;
    private javax.swing.JLabel jLabelFirstName;
    private javax.swing.JLabel jLabelHireDate;
    private javax.swing.JLabel jLabelHireType;
    private javax.swing.JLabel jLabelLastName;
    private javax.swing.JLabel jLabelSalary;
    private javax.swing.JList<String> jListDepartment;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelAdresse;
    private javax.swing.JPanel jPanelApplication;
    private javax.swing.JPanel jPanelDepartment;
    private javax.swing.JPanel jPanelEmployee;
    private javax.swing.JRadioButton jRadioButtonFullTime;
    private javax.swing.JRadioButton jRadioButtonPartialTime;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSliderSalary;
    private javax.swing.JSpinner jSpinnerNombreJours;
    private javax.swing.JTextField jTextFieldAppartmentNumber;
    private javax.swing.JTextField jTextFieldDefaultSalary;
    private javax.swing.JTextField jTextFieldFistName;
    private javax.swing.JTextField jTextFieldLastName;
    private javax.swing.JTextField jTextFieldPostalCode;
    private javax.swing.JTextField jTextFieldStreetName;
    private javax.swing.JTextField jTextFieldStreetNumber;
    // End of variables declaration//GEN-END:variables

    private void clear() {
        jSliderSalary.setValue(2500);
        jSpinnerNombreJours.setValue(1);
        jTextFieldAppartmentNumber.setText("Appartment Number");
        jTextFieldDefaultSalary.setText("2500");
        jTextFieldFistName.setText("");
        jTextFieldLastName.setText("");
        jTextFieldPostalCode.setText("Postal Code");
        jTextFieldStreetName.setText("Street Name");
        jTextFieldStreetNumber.setText("Street Number");
        jListDepartment.clearSelection();
    }

    private void validateEmployeeInformation() throws ErrorEmployee{
        
        // Valider que le nom et le prenom existent

        String nom = "";
        String prenom = "";
        if(jTextFieldFistName.getText().length() == 0 
                || jTextFieldLastName.getText().length() == 0){
           
           throw new ErrorEmployee();
        }
    }

    private void validateDepartmentSelection() throws ErrorDepartment {
        
        if( jListDepartment.isSelectionEmpty()) 
            throw new ErrorDepartment();
        
    }

    private void validateAdresse() throws ErrorAdresse {
        
        if(jTextFieldStreetNumber.getText().length() == 0 
                    ||  jTextFieldStreetName.getText().length() == 0
                    || jTextFieldAppartmentNumber.getText().length() == 0
                    || jTextFieldPostalCode.getText().length() == 0)
            throw new ErrorAdresse();
    }

    private void validateHireType()  throws ErrorHireType{
        
         if( !jRadioButtonFullTime.isSelected() && !jRadioButtonPartialTime.isSelected())
             throw new ErrorHireType();
    }
}
